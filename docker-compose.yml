version: '3.9'

services:
  task:
    container_name: task
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - postgres
      - mongo
    networks:
      - mynetwork

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2005
      POSTGRES_DB: internship
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d internship || exit 1"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - mynetwork

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-2005}@postgres:5432/${POSTGRES_DB:-internship}?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  redis:
    container_name: redis_container17
    image: redis:latest
    ports:
      - "6378:6379"
    volumes:
      - redis-data:/data
    networks:
      - mynetwork

  mongo:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongo-data:/data/db
    ports:
      - "27019:27017"
    networks:
      - mynetwork

volumes:
  postgres-data:
  redis-data:
  mongo-data:

networks:
  mynetwork:
    driver: bridge